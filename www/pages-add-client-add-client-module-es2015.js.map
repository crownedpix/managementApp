{"version":3,"sources":["./src/app/pages/add-client/add-client.component.html","./src/app/pages/add-client/add-client.component.scss","./src/app/pages/add-client/add-client.component.ts","./src/app/pages/add-client/add-client.module.ts"],"names":[],"mappings":"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","file":"pages-add-client-add-client-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-text color=\\\"light\\\">\\n        <ion-text color=\\\"light\\\" class=\\\"fw700\\\">Add Client</ion-text>\\n      </ion-text>\\n    </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content class=\\\"card-background-page\\\">\\n  <ion-card no-margin>\\n    <ion-grid fixed no-padding>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-list margin-bottom>\\n            <form [formGroup]=\\\"addclientForm\\\" (ngSubmit)=\\\"createClient()\\\">\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Full Name:</ion-label>\\n                <ion-input inputmode=\\\"text\\\" formControlName=\\\"name\\\" placeholder=\\\"Ex..: Joe Doe\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Phone (With County code):</ion-label>\\n                <ion-input inputmode=\\\"tel\\\" formControlName=\\\"contact_phone\\\" placeholder=\\\"Ex.: 999 999 9999\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Email:</ion-label>\\n                <ion-input inputmode=\\\"email\\\" formControlName=\\\"contact_email\\\" placeholder=\\\"Ex.: joe@doe.com\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">State</ion-label>\\n                <ion-input inputmode=\\\"text\\\" formControlName=\\\"state\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Country</ion-label>\\n                <ion-select formControlName=\\\"country\\\">\\n                  <ion-select-option value={{c.country_code}} *ngFor=\\\"let c of countries\\\">{{c.country_name}}\\n                  </ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Referred By</ion-label>\\n                <ion-select formControlName=\\\"refrenced_by\\\">\\n                  <ion-select-option value=\\\"{{user.id}}\\\" *ngFor=\\\"let user of users\\\">{{user.first_name}}\\n                    {{user.last_name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-button size=\\\"large\\\" expand=\\\"full\\\" color=\\\"dark\\\" type=\\\"submit\\\" [disabled]=\\\"!addclientForm.valid\\\" no-margin>Create Client</ion-button>\\n            </form>\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZC1jbGllbnQvYWRkLWNsaWVudC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/service/api.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.scss']\n})\nexport class AddClientComponent {\n  public addclientForm: FormGroup;\n  users = [];\n  skills = [];\n  countries = [];\n  toast;\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService, public navCtrl: NavController,\n    public toastCtrl: ToastController, public storage: Storage) { }\n\n  ngOnInit() {\n\n    this.storage.get('users').then(data => {\n      this.users = data;\n    })\n\n    this.storage.get('skills').then(data => {\n      this.skills = data;\n    })\n   \n    this.storage.get('countries').then(data => {\n      this.countries = data;\n    })\n    \n  \n    this.addclientForm = this.formBuilder.group({\n      'name': [null, Validators.compose([\n        Validators.required\n      ])],\n      'contact_email': [null, Validators.compose([\n        Validators.required\n      ])],\n      'contact_phone': [null, Validators.compose([\n        Validators.required\n      ])],\n      'state': [null],\n      'country': [null],\n      'refrenced_by': [null, Validators.compose([\n        Validators.required\n      ])]\n    });\n  }\n\n  createClient() {\n    const value = {\n      name: this.addclientForm.value.name,\n      contact_email: this.addclientForm.value.contact_email,\n      contact_phone: this.addclientForm.value.contact_phone,\n      location: JSON.stringify([this.addclientForm.value.state, this.addclientForm.value.country]),\n      refrenced_by: Number(this.addclientForm.value.refrenced_by),\n      rating: 0\n    }\n\n    this.apiService.setClient(value).subscribe(data => {\n      console.log(\"success\");\n      this.toast = this.toastCtrl.create({\n        message: 'Added Client Successfully',\n        duration: 2000\n      }).then((toastData) => {\n        console.log(toastData);\n        toastData.present();\n      });\n      this.apiService.hideLoader();\n      this.navCtrl.navigateRoot('/clients');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddClientComponent } from './add-client.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddClientComponent\n  }\n];\n\n@NgModule({\n  declarations: [AddClientComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AddClientModule { }\n"],"sourceRoot":""}