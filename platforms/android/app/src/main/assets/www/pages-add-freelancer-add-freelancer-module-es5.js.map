{"version":3,"sources":["./src/app/pages/add-freelancer/add-freelancer.component.html","./src/app/pages/add-freelancer/add-freelancer.component.scss","./src/app/pages/add-freelancer/add-freelancer.component.ts","./src/app/pages/add-freelancer/add-freelancer.module.ts"],"names":[],"mappings":"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","file":"pages-add-freelancer-add-freelancer-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-text color=\\\"light\\\">\\n        <ion-text color=\\\"light\\\" class=\\\"fw700\\\">Add Freelancer</ion-text>\\n      </ion-text>\\n    </ion-title>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"medium\\\" (click)=\\\"notifications()\\\">\\n        <ion-icon name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge color=\\\"dark\\\" slot=\\\"end\\\">2</ion-badge>\\n      </ion-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n  <!-- <ion-toolbar color=\\\"dark\\\">\\n    <ion-searchbar [(ngModel)]=\\\"searchKey\\\"></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"medium\\\" (click)=\\\"searchFilter()\\\">\\n        <ion-icon name=\\\"options\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar> -->\\n</ion-header>\\n\\n<ion-content class=\\\"card-background-page\\\">\\n  <ion-card no-margin>\\n    <ion-grid fixed no-padding>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n\\n          <ion-list margin-bottom>\\n            <form [formGroup]=\\\"addfreelancerForm\\\" (ngSubmit)=\\\"createFreelancer()\\\">\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Full Name:</ion-label>\\n                <ion-input inputmode=\\\"text\\\" placeholder=\\\"Ex: Joe Doe\\\" value=\\\"\\\" formControlName=\\\"name\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Designation:</ion-label>\\n                <ion-input inputmode=\\\"text\\\" placeholder=\\\"Ex: Developer\\\" value=\\\"\\\" formControlName=\\\"designation\\\">\\n                </ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Experience:</ion-label>\\n                <ion-input inputmode=\\\"text\\\" placeholder=\\\"Ex:8+ years\\\" value=\\\"\\\" formControlName=\\\"experience\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Email:</ion-label>\\n                <ion-input inputmode=\\\"email\\\" formControlName=\\\"contact_email\\\" placeholder=\\\"Ex.: joe@doe.com\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Phone (With County code):</ion-label>\\n                <ion-input inputmode=\\\"tel\\\" formControlName=\\\"contact_phone\\\" placeholder=\\\"999 999 9999\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">State</ion-label>\\n                <ion-input inputmode=\\\"text\\\" formControlName=\\\"state\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Country</ion-label>\\n                <ion-select formControlName=\\\"country\\\">\\n                  <ion-select-option value={{c.country_code}} *ngFor=\\\"let c of countries\\\">{{c.country_name}}\\n                  </ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Skill</ion-label>\\n                <ion-select multiple=\\\"true\\\" formControlName=\\\"skill\\\">\\n                  <ion-select-option value={{skill.id}} *ngFor=\\\"let skill of skills\\\">{{skill.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Referred By</ion-label>\\n                <ion-select formControlName=\\\"refrenced_by\\\">\\n                  <ion-select-option value=\\\"{{user.id}}\\\" *ngFor=\\\"let user of users\\\">{{user.first_name}}\\n                    {{user.last_name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Current Status</ion-label>\\n                <ion-select formControlName=\\\"status\\\">\\n                  <ion-select-option value=\\\"{{sta.value}}\\\" *ngFor=\\\"let sta of statuses\\\">{{sta.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Bank Name</ion-label>\\n                <ion-input inputmode=\\\"text\\\" formControlName=\\\"bank_name\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Bank Account Number</ion-label>\\n                <ion-input inputmode=\\\"text\\\" formControlName=\\\"bank_account_no\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Ifsc Number</ion-label>\\n                <ion-input inputmode=\\\"test\\\" formControlName=\\\"bank_ifsc\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Account Phone Number</ion-label>\\n                <ion-input inputmode=\\\"tel\\\" formControlName=\\\"bank_linked_phone\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">BHIM Number</ion-label>\\n                <ion-input inputmode=\\\"number\\\" formControlName=\\\"BHIM_number\\\" placeholder=\\\"Ex. Ohio\\\" value=\\\"\\\">\\n                </ion-input>\\n              </ion-item>\\n              <ion-button size=\\\"large\\\" expand=\\\"full\\\" color=\\\"dark\\\" type=\\\"submit\\\" [disabled]=\\\"!addfreelancerForm.valid\\\"\\n                no-margin>Create Freelancer\\n              </ion-button>\\n            </form>\\n\\n\\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n\\n  </ion-card>\\n</ion-content>\\n\\n<!-- <div>\\n  <img class=\\\"img-logo\\\" src=\\\"../vnd/leaflet/images/Mel_V2.png\\\" alt=\\\"logo\\\" />\\n  <div class=\\\"MarkerPopUp\\\">\\n    <span class=\\\"nameDiv\\\"> ' + name + '</span>\\n    <span class=\\\"totDiv\\\"> ' + total + '</span>\\n    <div class=\\\"storeNameDiv\\\">' + storeName + '</div>\\n  </div>\\n</div> -->\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZC1mcmVlbGFuY2VyL2FkZC1mcmVlbGFuY2VyLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/service/api.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n\n\n@Component({\n  selector: 'app-add-freelancer',\n  templateUrl: './add-freelancer.component.html',\n  styleUrls: ['./add-freelancer.component.scss']\n})\nexport class AddFreelancerComponent {\n  public addfreelancerForm: FormGroup;\n  users = [];\n  skills = [];\n  countries = [];\n  statuses = [];\n  toast;\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService, public navCtrl: NavController,\n    public toastCtrl: ToastController, public storage: Storage) {\n      // this.addfreelancerForm.controls[\"status\"].setValue(\"active\");\n      this.statuses = this.apiService.statuses;\n     }\n\n  ngOnInit() {\n    \n    this.storage.get('users').then(data => {\n      this.users = data;\n    })\n\n    this.storage.get('skills').then(data => {\n      this.skills = data;\n    })\n   \n    this.storage.get('countries').then(data => {\n      this.countries = data;\n    })\n    \n  \n    this.addfreelancerForm = this.formBuilder.group({\n      'name': [null, Validators.compose([\n        Validators.required\n      ])],\n      'contact_email': [null, Validators.compose([\n        Validators.required\n      ])],\n      'contact_phone': [null, Validators.compose([\n        Validators.required\n      ])],\n      'designation': [null, Validators.compose([\n        Validators.required\n      ])],\n      'experience': [null, Validators.compose([\n        Validators.required\n      ])],\n      'state': [null],\n      'country': [null],\n      'status': [null, Validators.compose([\n        Validators.required\n      ])],\n      'skill': [null, Validators.compose([\n        Validators.required\n      ])],\n      'bank_name': [null],\n      'bank_account_no': [null],\n      'bank_ifsc': [null],\n      'bank_linked_phone': [null],\n      'BHIM_number': [null],\n      'refrenced_by': [null, Validators.compose([\n        Validators.required\n      ])]\n    });\n  }\n\n  createFreelancer() {\n    const value = {\n      name: this.addfreelancerForm.value.name,\n      contact_email: this.addfreelancerForm.value.contact_email,\n      contact_phone: this.addfreelancerForm.value.contact_phone,\n      designation: this.addfreelancerForm.value.designation,\n      experience: this.addfreelancerForm.value.experience,\n      status: this.addfreelancerForm.value.status,\n      skill: JSON.stringify(this.addfreelancerForm.value.skill),\n      location: JSON.stringify([this.addfreelancerForm.value.state, this.addfreelancerForm.value.country]),\n      bank_name: (this.addfreelancerForm.value.bank_name),\n      bank_account_no: (this.addfreelancerForm.value.bank_account_no),\n      bank_ifsc:(this.addfreelancerForm.value.bank_ifsc),\n      bank_linked_phone: (this.addfreelancerForm.value.bank_linked_phone),\n      BHIM_number:(this.addfreelancerForm.value.BHIM_number),\n      refrenced_by: Number(this.addfreelancerForm.value.refrenced_by),\n      rating: 0\n    }\n    console.log(value);\n    this.apiService.setFreelancer(value).subscribe(data => {\n      console.log(\"success\");\n      this.toast = this.toastCtrl.create({\n        message: 'Added Freelancer Successfully',\n        duration: 2000\n      }).then((toastData) => {\n        console.log(toastData);\n        toastData.present();\n      });\n      this.apiService.hideLoader();\n      this.navCtrl.navigateRoot('/freelancers');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { AddFreelancerComponent } from './add-freelancer.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddFreelancerComponent\n  }\n];\n\n@NgModule({\n  declarations: [AddFreelancerComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AddFreelancerModule { }\n"],"sourceRoot":""}