{"version":3,"sources":["./src/app/pages/addproject/addproject.component.html","./src/app/pages/addproject/addproject.component.scss","./src/app/pages/addproject/addproject.component.ts","./src/app/pages/addproject/addproject.module.ts"],"names":[],"mappings":"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","file":"pages-addproject-addproject-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-title>\\n      <ion-text color=\\\"light\\\">\\n        <ion-text color=\\\"light\\\" class=\\\"fw700\\\">Add Project</ion-text>\\n      </ion-text>\\n    </ion-title>\\n    <!-- <ion-buttons slot=\\\"end\\\">\\n      <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"medium\\\" (click)=\\\"notifications()\\\">\\n        <ion-icon name=\\\"notifications\\\"></ion-icon>\\n        <ion-badge color=\\\"dark\\\" slot=\\\"end\\\">2</ion-badge>\\n      </ion-button>\\n    </ion-buttons> -->\\n  </ion-toolbar>\\n  <!-- <ion-toolbar color=\\\"dark\\\">\\n    <ion-searchbar [(ngModel)]=\\\"searchKey\\\"></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button size=\\\"small\\\" shape=\\\"round\\\" color=\\\"medium\\\" (click)=\\\"searchFilter()\\\">\\n        <ion-icon name=\\\"options\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar> -->\\n</ion-header>\\n\\n<ion-content class=\\\"card-background-page\\\">\\n  <ion-card no-margin>\\n    <ion-grid fixed no-padding>\\n      <ion-row>\\n        <ion-col size=\\\"12\\\">\\n          <ion-list margin-bottom>\\n            <form [formGroup]=\\\"addprojectForm\\\" (ngSubmit)=\\\"addProject()\\\">\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Name:</ion-label>\\n                <ion-input inputmode=\\\"text\\\" placeholder=\\\"Project name\\\" formControlName=\\\"name\\\" value=\\\"\\\"></ion-input>\\n              </ion-item>\\n              <p ion-text class=\\\"text08\\\"\\n                *ngIf=\\\"addprojectForm.get('name').touched && addprojectForm.get('name').hasError('required')\\\">\\n                <ion-text color=\\\"warning\\\">\\n                  Required Field\\n                </ion-text>\\n              </p>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\" position=\\\"stacked\\\">Description</ion-label>\\n                <ion-textarea inputmode=\\\"text\\\" placeholder=\\\"Project Description\\\" formControlName=\\\"description\\\" value=\\\"\\\">\\n                </ion-textarea>\\n              </ion-item>\\n              <!-- <p ion-text class=\\\"text08\\\"\\n                *ngIf=\\\"addprojectForm.get('description').touched && addprojectForm.get('description').hasError('required')\\\">\\n                <ion-text color=\\\"warning\\\">\\n                  Required Field\\n                </ion-text>\\n              </p> -->\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Skills Required</ion-label>\\n                <ion-select multiple=\\\"true\\\" formControlName=\\\"skills\\\">\\n                  <ion-select-option value={{skill.id}} *ngFor=\\\"let skill of skills\\\">{{skill.name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Referred By</ion-label>\\n                <ion-select formControlName=\\\"refrenced_by\\\">\\n                  <ion-select-option value=\\\"{{user.id}}\\\" *ngFor=\\\"let user of users\\\">{{user.first_name}}\\n                    {{user.last_name}}</ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                <ion-label color=\\\"dark\\\">Client</ion-label>\\n                <ion-select formControlName=\\\"client_id\\\">\\n                  <ion-select-option value=\\\"{{client.id}}\\\" *ngFor=\\\"let client of clients\\\">{{client.name}}\\n                  </ion-select-option>\\n                </ion-select>\\n              </ion-item>\\n              <ion-item>\\n                  <ion-label color=\\\"dark\\\">Assign Freelancers</ion-label>\\n                  <ion-select multiple=\\\"true\\\" formControlName=\\\"total_freelancer\\\">\\n                    <ion-select-option value=\\\"{{freelancer.id}}\\\" *ngFor=\\\"let freelancer of freelancers\\\">{{freelancer.name}}\\n                    </ion-select-option>\\n                  </ion-select>\\n                </ion-item>\\n              <ion-button size=\\\"large\\\" expand=\\\"full\\\" color=\\\"dark\\\" type=\\\"submit\\\" [disabled]=\\\"!addprojectForm.valid\\\" no-margin>Add Project</ion-button>\\n            </form>\\n          \\n          </ion-list>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n    \\n  </ion-card>\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2FkZHByb2plY3QvYWRkcHJvamVjdC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from 'src/app/service/api.service';\nimport { NavController, ToastController } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\n@Component({\n  selector: 'app-addproject',\n  templateUrl: './addproject.component.html',\n  styleUrls: ['./addproject.component.scss']\n})\nexport class AddprojectComponent implements OnInit {\n  public addprojectForm: FormGroup;\n  users = [];\n  skills = [];\n  clients= [];\n  freelancers = [];\n  toast;\n  constructor(private formBuilder: FormBuilder, private apiService: ApiService,public navCtrl: NavController,\n    public toastCtrl: ToastController, private storage: Storage) { }\n\n  ngOnInit() {\n    this.storage.get('users').then(data => {\n      this.users = data;\n    })\n\n    this.storage.get('skills').then(data => {\n      this.skills = data;\n    })\n   \n    this.storage.get('clients').then(data => {\n      this.clients = data;\n    })\n\n    this.storage.get('freelancers').then(data => {\n      this.freelancers = data;\n    })\n\n\n    \n    this.addprojectForm = this.formBuilder.group({\n      'name': [null, Validators.compose([\n        Validators.required\n      ])],\n      'description': [null],\n      'skills': [null, Validators.compose([\n        Validators.required\n      ])],\n      'refrenced_by':[null, Validators.compose([\n        Validators.required\n      ])],\n      'client_id':[null, Validators.compose([\n        Validators.required\n      ])],\n      'total_freelancer':[null, Validators.compose([\n        Validators.required\n      ])]\n    });\n  }\n\n  addProject() {\n    const value = {\n      name: this.addprojectForm.value.name,\n      description: this.addprojectForm.value.description,\n      skills: JSON.stringify(this.addprojectForm.value.skills),\n      refrenced_by: Number(this.addprojectForm.value.refrenced_by),\n      client_id: Number(this.addprojectForm.value.client_id),\n      total_freelancer: JSON.stringify(this.addprojectForm.value.total_freelancer)\n    }\n    console.log(value);\n    this.apiService.setProject(value).subscribe(data => {\n      console.log(\"success\");\n      this.toast = this.toastCtrl.create({\n        message: 'Added Project Successfully',\n        duration: 2000\n      }).then((toastData)=>{\n        console.log(toastData);\n        toastData.present();\n      });\n      this.apiService.hideLoader();\n      this.navCtrl.navigateRoot('/projects');\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { AddprojectComponent } from './addproject.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AddprojectComponent\n  }\n];\n\n@NgModule({\n  declarations: [AddprojectComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ]\n})\nexport class AddprojectModule { }\n"],"sourceRoot":""}